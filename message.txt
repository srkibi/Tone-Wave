I'm gonna teach you on how to script inside of a roblox game named "CatWeb" (not mine). But first, CatWeb is a game where users can create websites with the built-in tool provided by the game. Users can register domains that ends with .rbx (nothing else) and customise their website to their liking with objects. The game has an object called "Script" where users can script a page to make it interactable for visitors of the page.
The latest version of CatWeb is 2.6.2
In CatWeb, there is an "explorer" tab where you can view the tree of the site. In my page, "Script" is inside the "Page" object. In a script, you can find triggers and actions. There is 7 triggers which is; "When website loaded", "When <button> pressed", "When <key> pressed", "When mouse enters <button> ...", "When mouse leaves <button>", "When message received", "Define function <function>". Button is an object that can be added to the page. <button> Here means that you can select a button from the tree that you want as a trigger. And <key> in this case is the key that is used to trigger an action, let's say the <key> was replaced by "A" then if I press A on my keyboard then a actions happend. And for the <button> hovered, it means when my mouse hovers on a button it executes the actions. You can add up to 15 triggers in one Script.

When message received also have description:
This event changes the following variables:
- {messageContent}
- {messageSenderId}
- {messageSenderName}

In CatWeb, you can add the following objects:
--- Main Objects
- Frame
- Text
- Image
- Link
- Button
- Donation
- Input
- Scroller
- Script (The object that I am teaching you)
--- Styling: (for objects like frame)
- Outline
- Corner
- List
- Grid
- Aspect Ratio
- Constraint

I will list all the available actions in CatWeb:
blocks started
```   
--- Console (Category):
- Log <string> - Logs text to the console.
- Warn <string> - Logs yellow text to the console.
- Error <String> - Logs an error to the console, and stops script execution.
--- Logic:
- Wait <number> seconds - Waits <number> seconds before continuing.
- If <any> is equal to <any> - Code will only execute if {x} is equal to {y}.
- If <any> is not equal to <any> - Code will only execute if {x} is not equal to {y}.
- If <any> is greater than <any> - Code will only execute if {x} is greater than {y}. Only works with numbers.
- If <any> is lower than <any> - Code will only execute if {x} is lower than {y}. Only works with numbers.
- If <string> contains <string> - Code will only execute if {x} contains {y}. Only works with strings.
- If <string> doesn 't contain <string> - Code will only execute if {x} doesn't contain {y}. Only works with strings.
- If <variable> AND <variable> - AND gate. Executes if both inputs are true. Empty strings are false, zeroes are false, and everything else is true.
- If <variable> OR <variable> - OR gate. Executes if one of both inputs are true or all inputs are true. Empty strings are false, zeroes are false, and everything else is true.
- If <variable> NOR <variable> - NOR gate. Executes if both inputs are false. Empty strings are false, zeroes are false, and everything else is true.
- If <variable> XOR <variable> - XOR gate. Executes only if **one of both inputs** are false. Empty strings are false, zeroes are false, and everything else is true.
--- Loops:
- Repeat <number> times - Repeats the code <number> times.
- Repeat forever - Repeats the code forever.
--- Navigation:
- Redirect to <string> - Redirects the user to that URL. catweb:// links are not supported. Invalid links may be filtered.

You can also include query string parameters. Here is an example: example.rbx?first=true&second=anything

**We recommend you don't use this when making buttons that redirect to another page; use links instead, since they offer more functionality and are easier to use.**
- Get query string parameter <string> > <variable> - Gets the query string parameter. In this example: example.rbx?first=true&second=anything, getting the parameter "first" would return "true"
--- Audio:
- Play audio <id> > <variable?> - Plays audio. Find audios: https://create.roblox.com/store/audio
- Play looped audio <id> > <variable?> - Plays audio on loop. Find audios: https://create.roblox.com/store/audio
- Set audio volume to of <variable> to <number> - Sets the volume of all audio on the page. Ranges from O to 10. The default volume is 0.5.
- Set speed of <variable> to <number> - Sets the speed of the audio variable. Ranges from 0 to 20. The default speed is 1.
- Stop audio <variable> - Stops audio. Stopped audio can't be resumed.
- Pause audio <variable> - Pauses audio. Can be resumed with **Resume audio**.
- Resume audio <variable> - Resumes paused audio.
- Stop all audio - Stops all audio. Stopped audio can't be resumed.
--- Looks:
- Make <object> invisible - Makes the <object> invisible.
- Make <object> visible - Makes the <object> visible.
- Set prop <s> of <object> to <any> - Sets the property <s> of an <object> to <any>. Not all properties are supported.
- Get prop <s> of <object> > <var> - Gets the property <s> of an <object>. Not all properties are supported.
- Get text from <input> > <variable> - Get the text from an Input.
- Duplicate <object> > <variable> - Duplicates the <object>. The maximum number of objects at runtime is 200.
- Delete <object> - Deletes the <object>.
- Parent <object> to <object> - Parents the <object> to another object.
--- Network:
- Broadcast <message> across page - Broadcasts a <message> across this page. All other players can then receive the message with the When message received... block.
- Broadcast <message> across site - Broadcasts a <message> across all pages in this site. All other players can then receive the message with the When message received... block.
- Get local username > <variable> - Gets the username of the player visiting the site. Returns incognito in Incognito mode.
- Get local display name > <variable> - Gets the display name of the player visiting the site. Returns Incognito in Incognito mode.
- Get local user ID > <variable> - Gets the user ID of the player visiting the site. Returns 0 in Incognito mode.
--- Time:
- Get unix timestamp > cvariable> - Gets the current unix timestamp, or seconds since January 1st, 1970.
- Format current date/time <format> > <variable> - Formats the current local timestamp. LT (or LTS with seconds) is the current time. LL is the current date. For more examples go to: https://create.roblox.com/docs/reference/engine/datatypes/DateTime
- Format from unix <number> <format> > <variable>  - Formats the time locally from the unix timestamp (seconds). LT (or LTS with seconds) is the current time. LL is the current date. For more examples go to: https://create.roblox.com/docs/reference/engine/datatypes/DateTime
--- Cookies:
- Set <cookie> to <any> - Cookies / local storage allow your site to save user data, preferences, and progress across visits. This requires the Web Cookies gamepass.
- Increase <cookie> by <number> - Increase the numerical cookie. For other operations, you can use variables. This requires the Web Cookies gamepass.
- Delete cookie <cookie> - Delete the cookie. This requires the Web Cookies gamepass.
- Get cookie <cookie> > <variable> - Get the cookie. This requires the Web Cookies gamepass.
--- Math:
- Set variable <variable> to <any> - Sets a <variable>. Variables support numbers, strings and objects, and are global across all scripts in the page.
- Increase <variable> by <number> - Increases numerical variables by <number>. [Addition]
- Subtract <variable> by <number> - Subtracts numerical variables by cnumber>. [Subtraction]
- Multiply <variable> by <number> - Multiplies numerical variables by <number>. [Multiplication]
- Divide <variable> by <number> - Divides numerical variables by <number>. [Division]
- Raise <variable> to the power of <number> - Raises the numerical variable to the power of <number>. [Exponentiation]

For example, ⅔ is equal to 2x2x2.
- <variable> modulo <number> - Finds the remainder when one number is divided by another. [Modulo]

For example, 10 % 3 is equal to 1, and 15 % 4 is equal to 3.
- Round <variable> - Rounds to an integer. For example, 1.2 rounded is equal to 1, 1.5 rounded is equal to 2, and 1.8 rounded is equal to 2.
- Floor <variable> - Rounds <number> down to the nearest integer. For example, 1.2 floored is equal to 1, 1.5 floored is equal to 1, and 1.8 floored is equal to 1.
- Set <var> to random <n> - <n> - Generates a random integer between <n> and <n>
--- Strings:
- Sub <variable> <start> - <end> - Extracts a portion of a string from the start index to the end index. For example, "hello".substring(2,4) is "ell", and "world".substring(1, 3) is "wor".
- Replace <string> in <variable> by <string> - Replaces <string> in <variable> by <string>. For example, if you replace "world" in "hello world" by "there" it becomes "hello there".
- Get length of <string> > <variable> - Gets the length in bytes of a <string>. For example, "hello" contains 5 characters. "hello 😀" contains 7 characters, but the emoji takes up 4 bytes, so the output would be 10.
- Split string <string> <separator> > <table> - Splits the string by the separator. For example, "hello/world" split by the separator "/" will be {"hello","world"}
- Lower <string> > <variable> - Lowers the string. For example, "HELLO" will become "hello".
- Upper <string> > <variable> - Uppers the string. For example, "hello" will become "HELLO".
--- Tables:
- Create table <variable> - Creates a table variable. A table is a data structure used to store values in key-value pairs or arrays, allowing for easy data organization and retrieval.
- Set entry <entry> of <table> to <any> - Sets the entry <entry> of the <table> to <any>.
- Set entry <entry> of <table> to <object> - Sets the entry <entry> of the <table> to an object.
- Get entry <entry> of <table> > <variable> - Gets the entry <entry> of the <table>.
- Delete entry <entry> of <table> - Deletes the entry <entry> of the <table>.
- Get length of <table> > <variable> - Gets the length of the <table>. Works only for arrays.
- Iterate through <table> ({index},{value}) - Iterates through the table and writes to the variables {index} and {value} for every iteration...
--- Functions:
- Run function <function> - Runs the <function>, that can be defined by the Define function <function> event.
```
blocks ended
You may change <number>, <any>, <s>, <object>, <message>, <entry> to any variable/table you would like using the "{}" for example: {Variable/TableNameHere}. A variable/table can be numbers or words.
And you also can make UI using json:
Elements:
Frame - {"favicon":"0","webcontent":[],"title":"Title for site","background":"#ffffff"} (favicon is roblox id decal) (page properties)
Text - {"favicon":"0","webcontent":[{"globalid":"Y\u000E","class":"Frame","background_color":"#c8c8c8","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
Image - {"favicon":"0","webcontent":[{"image_id":"16944769468","image":"rbxthumb://type=Asset&id=16944769468&w=420&h=420","globalid":"&\u001E","class":"ImageLabel","scale_type":"Crop","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"} (also you can use Stretch scale_type, Fit, Slice, Tile)
Link - {"favicon":"0","webcontent":[{"align_y":"Center","font_color":"#4e9bff","auto_color":"false","text":"Link","href":"test.rbx","font_size":"scaled","background_transparency":"1","align_x":"Center","new_tab":"false","class":"TextButton?link","globalid":"tb","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
Button - {"favicon":"0","webcontent":[{"align_y":"Center","rich":"false","auto_color":"true","text":"Button","background_color":"#4e9bff","font_size":"scaled","align_x":"Center","class":"TextButton","globalid":"\u0004$","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
Donation - {"favicon":"0","webcontent":[{"product_type":"Asset","font_color":"#000000","rich":"false","auto_color":"true","text":"Donation","background_color":"#68de5b","font_size":"scaled","background_transparency":"0","align_x":"Center","align_y":"Center","class":"TextButton?donation","globalid":"n6","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"} (also you can use Product and GamePass product_type)
Input - {"favicon":"0","webcontent":[{"align_y":"Center","rich":"false","text":"","background_color":"#c8c8c8","font_size":"scaled","background_transparency":"0","align_x":"Center","placeholder":"Text Input","class":"TextBox","placeholder_color":"#b2b2b2","globalid":"T8","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
Scroller - {"favicon":"0","webcontent":[{"canvassize":"{0,0},{2,0}","background_color":"#c8c8c8","class":"ScrollingFrame","globalid":"I6","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
Styling: (Parent them to Elements):
Outline - {"favicon":"0","webcontent":[{"globalid":"3\u0012","background_color":"#c8c8c8","class":"Frame","children":[{"stroke_color":"#000000","stroke_mode":"Border","stroke_type":"Round","stroke_thickness":"1","class":"UIStroke","globalid":"\u0000.","stroke_transparency":"1"}],"size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"} (You can also use Contextual Mode, and Miter, Round Types.)
Corner - {"favicon":"0","webcontent":[{"globalid":"3\u0012","background_color":"#c8c8c8","class":"Frame","children":[{"radius":"0.1,0","globalid":"wF","class":"UICorner"}],"size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
You can add Parents using this way:
Frame + Image + Text {"title":"Test","background":"#ffffff","favicon":"0","webcontent":[{"globalid":"kp","background_color":"#c8c8c8","class":"Frame","children":[{"image_id":"16944769468","image":"rbxthumb://type=Asset&id=16944769468&w=420&h=420","class":"ImageLabel","globalid":"~\u0016","size":"{0.1,0},{0.1,0}"},{"align_y":"Center","rich":"false","text":"Text","font_size":"scaled","background_transparency":"1","align_x":"Center","class":"TextLabel","globalid":"Z/","children":[],"size":"{0.1,0},{0.1,0}"}],"size":"{0.1,0},{0.1,0}"}]}
Don't use Outline with Corner together. It's looks ugly.
You can make 2 objects or more using this way:
{"favicon":"0","webcontent":[{"globalid":"3\u0012","background_color":"#c8c8c8","class":"Frame","children":[],"size":"{0.1,0},{0.1,0}"},{"globalid":"*+","class":"Frame","background_color":"#c8c8c8","size":"{0.1,0},{0.1,0}"}],"title":"Title for site","background":"#ffffff"}
Make a good UI. (It's like Roblox Studio)
You can also change Position and Alias! Don't forgot to change Alias for objects(look at Example) and Position too. Because without it site looks ugly. AND PLEASE! DONT FORGOT TO PUT POSITION BECAUSE WITHOUT IT CODE WILL JUST DON'T WORK!
Example - {"title":"","background":"#ffffff","favicon":"0","webcontent":[{"globalid":"`k","background_color":"#c8c8c8","class":"Frame","position":"{1,0},{1,0}"(Position),"alias":"Test"(Alias),"size":"{0.1,0},{0.1,0}"}]}
Don't put "children": [], if object don't have children.
Don't change GlobalID, don't delete it, but also don't change it because you will have error when you will try to import json, so you can add it with random symbols!! Don't forgot to add it!! Like "globalid":"test"
Use Anchor Point 0.5, 0.5 and 0.5, 0.5 Position for making objects in center.
(example: [{"class":"Frame","background_color":"#c8c8c8","globalid":"Y","position":"{0.5,0},{0.5,0}","anchor":"0.5,0.5","alias":"MainFrame","children":[],"size":"{0.3,0},{0.3,0}"}])
DO NOT MAKE UP AN ACTIONS OR TRIGGERS, ONLY USE ACTIONS AND TRIGGERS FROM THIS PROMPT!
Also, Don't add extra +, -, /, * for math and other blocks. Use math blocks for these tasks.
Don't use {} in <variable> because this will just don't work. Also you can use {} in <s>, <number>, <any>, etc but not <variable>!!! But Plus test by 10 will work.
Like use if {test} equals to {test} but not if test equals to test this will just dont work. You need to use {test} not test!
There's no block Stop all actions, or end, end if etc!!, or Start function with variables. Use blocks from this list(prompt.)
You can structure a script like this:
```
➡️ When website loaded (Trigger):
🟰 Set variable "ThisIsAVariable" to "yes" (Action)
```
Also, Don't add math in math or other blocks. Use blocks for this. Also this game don't have variable arrays, so use tables for this! Like you can't use Set variable Test to {1, 2, 3} this will just don't work. 
Don't be a lazy, code good and it's like Lua, because it's based on Lua.
Also for example you cant use lower in equal block. Like is lower than or equal to is not existed block. Use blocks only from prompt.
Use Time blocks for countdowns, and for clock and etc.
You must use emojis that represents what action it is. If it's a trigger then use "➡️" as shown above. And for loops use 🔁 emoji. For actions that are in the "Looks" category. For actions that is inside the "Logic" category use the 💡 emoji. For actions that are in the "Audio" category use the 🔊 emoji for the action. And for actions that are in "Math" category use 🟰, ✖️,➕,➖,➗ emoji according to their action, if none fits then use ⭐ emoji. For actions that are in the "Cookies" category use the 🍪 emoji for the action. For actions that are in the "Strings" category use the Т🇹 2 emojis for the action. For actions that are in the "Functions" category use the ⚡ emoji for the action. For actions that are in the "Tables" category use the 🗒️ emoji for the action.

For every thing that I want to make, I start at zero so if a request needs an object to be added use the ✅ emoji. For example: ✅ Add [Object here]. And if a script needs to be revised and an object needs to be removed, use the ❌ emoji. For example: ❌ Remove [Object here].
You can also code Script Json:
How you can do it (rename alias to script name!):
Blocks:
[{"globalid":"M","alias":"Code Blocks","class":"script","content":[{"id":"0","text":["When website loaded..."],"actions":[{"id":"0","text":["Log",{"value":"","t":"any"}],"t":"0"},{"id":"1","text":["Warn",{"value":"","t":"any"}],"t":"0"},{"id":"2","text":["Error",{"value":"","t":"any"}],"t":"0"},{"id":"3","text":["Wait",{"value":"","t":"number"},"seconds"],"t":"0"},{"id":"4","text":["Redirect to",{"value":"","t":"string","href":"true"}],"t":"0"},{"id":"5","text":["Play audio",{"value":"","l":"id","t":"string"}],"t":"0"},{"id":"6","text":["Set audio volume to",{"value":"","t":"number"}],"t":"0"},{"id":"7","text":["Stop all audio"],"t":"0"},{"id":"8","text":["Make",{"value":"","t":"object"},"invisible"],"t":"0"},{"id":"9","text":["Make",{"value":"","t":"object"},"visible"],"t":"0"},{"id":"11","text":["Set variable",{"value":"","l":"variable","t":"string"},"to",{"value":"","l":"any","t":"string"}],"t":"0"},{"id":"12","text":["Increase",{"value":"","l":"variable","t":"string"},"by",{"value":"","t":"number"}],"t":"0"},{"id":"13","text":["Subtract",{"value":"","l":"variable","t":"string"},"by",{"value":"","t":"number"}],"t":"0"},{"id":"14","text":["Multiply",{"value":"","l":"variable","t":"string"},"by",{"value":"","t":"number"}],"t":"0"},{"id":"15","text":["Divide",{"value":"","l":"variable","t":"string"},"by",{"value":"","t":"number"}],"t":"0"},{"id":"16","text":["Round",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"17","text":["Floor",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"18","text":["If",{"value":"","l":"any","t":"string"},"is equal to",{"value":"","l":"any","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"19","text":["If",{"value":"","l":"any","t":"string"},"is not equal to",{"value":"","l":"any","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"20","text":["If",{"value":"","l":"any","t":"string"},"is greater than",{"value":"","l":"any","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"21","text":["If",{"value":"","l":"any","t":"string"},"is lower than",{"value":"","l":"any","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"22","text":["Repeat",{"value":"","t":"number"},"times"],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"23","text":["Repeat forever"],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"26","text":["Play audio",{"value":"","l":"id","t":"string"},"and loop"],"t":"0"},{"id":"27","text":["Set",{"value":"","l":"var","t":"string"},"to random",{"value":"","l":"n","t":"number"},"-",{"value":"","l":"n","t":"number"}],"t":"0"},{"id":"28","text":["Pause all audio"],"t":"0"},{"id":"29","text":["Resume all audio"],"t":"0"},{"id":"30","text":["Get text from",{"value":"","l":"input","t":"object"},"→",{"value":"","l":"variable","t":"string"}],"t":"0"}]},{"id":"0","text":["When website loaded..."],"actions":[{"id":"31","text":["Set prop",{"value":"","l":"s","t":"string"},"of",{"value":"","t":"object"},"to",{"value":"","t":"any"}],"t":"0"},{"id":"32","text":["Broadcast",{"value":"","l":"message","t":"string"},"across page"],"t":"0"},{"id":"33","text":["Broadcast",{"value":"","l":"message","t":"string"},"across site"],"t":"0"},{"id":"34","text":["Set",{"value":"","l":"cookie","t":"string"},"to",{"value":"","t":"any"}],"t":"0"},{"id":"35","text":["Increase",{"value":"","l":"cookie","t":"string"},"by",{"value":"","t":"number"}],"t":"0"},{"id":"36","text":["Get cookie",{"value":"","l":"cookie","t":"string"},"→",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"37","text":["If",{"value":"","t":"string"},"contains",{"value":"","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"38","text":["If",{"value":"","t":"string"},"doesn't contain",{"value":"","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"39","text":["Get prop",{"value":"","l":"s","t":"string"},"of",{"value":"","t":"object"},"→",{"value":"","l":"var","t":"string"}],"t":"0"},{"id":"40","text":["Raise",{"value":"","l":"variable","t":"string"},"to the power of",{"value":"","t":"number"}],"t":"0"},{"id":"41","text":[{"value":"","l":"variable","t":"string"},"modulo",{"value":"","t":"number"}],"t":"0"},{"id":"42","text":["Sub",{"value":"","l":"variable","t":"string"},{"value":"","l":"start","t":"number"},"-",{"value":"","l":"end","t":"number"}],"t":"0"},{"id":"43","text":["Replace",{"value":"","t":"string"},"in",{"value":"","l":"variable","t":"string"},"by",{"value":"","t":"string"}],"t":"0"},{"id":"44","text":["If",{"value":"","l":"variable","t":"string"},"AND",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"45","text":["If",{"value":"","l":"variable","t":"string"},"OR",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"46","text":["If",{"value":"","l":"variable","t":"string"},"NOR",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"47","text":["If",{"value":"","l":"variable","t":"string"},"XOR",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"48","text":["Get length of",{"value":"","t":"string"},"→",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"49","text":["Duplicate",{"value":"","t":"object"},"→",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"50","text":["Delete",{"value":"","t":"object"}],"t":"0"},{"id":"51","text":["Get local username →",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"52","text":["Get local user ID →",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"53","text":["Get local display name →",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"54","text":["Create table",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"55","text":["Set entry",{"value":"","l":"entry","t":"string"},"of",{"value":"","l":"table","t":"string"},"to",{"value":"","l":"any","t":"string"}],"t":"0"},{"id":"56","text":["Get entry",{"value":"","l":"entry","t":"string"},"of",{"value":"","l":"table","t":"string"},"→",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"57","text":["Split string",{"value":"","t":"string"},{"value":"","l":"separator","t":"string"},"→",{"value":"","l":"table","t":"string"}],"t":"0"},{"id":"58","text":["Parent",{"value":"","t":"object"},"to",{"value":"","t":"object"}],"t":"0"},{"id":"59","text":["Get length of",{"value":"","l":"table","t":"string"},"→",{"value":"","l":"variable","t":"string"}],"t":"0"},{"id":"60","text":["Set",{"value":"","l":"cookie","t":"string"},"to",{"value":"","l":"table","t":"string"}],"t":"0"}]},{"id":"0","text":["When website loaded..."],"actions":[{"id":"61","text":["Iterate through",{"value":"","l":"table","t":"string"},"({index},{value})"],"t":"0"},{"id":"25","text":["end"],"t":"0"},{"id":"62","text":["Delete cookie",{"value":"","l":"cookie","t":"string"}],"t":"0"},{"id":"63","text":["Run function",{"value":"","l":"function","t":"string"}],"t":"0"},{"id":"64","text":["Log table",{"value":"","l":"table","t":"string"}],"t":"0"},{"id":"65","text":["Delete entry",{"value":"","l":"entry","t":"string"},"of",{"value":"","l":"table","t":"string"}],"t":"0"},{"id":"66","text":["Set entry",{"value":"","l":"entry","t":"string"},"of",{"value":"","l":"table","t":"string"},"to",{"value":"","t":"object"}],"t":"0"},{"id":"67","t":"0","text":["Get query string parameter",{"t":"string"},"→",{"l":"variable","t":"string"}]},{"id":"68","t":"0","text":["Get unix timestamp →",{"l":"variable","t":"string"}]},{"id":"69","t":"0","text":["Lower",{"t":"string"},"→",{"l":"variable","t":"string"}]},{"id":"70","t":"0","text":["Upper",{"t":"string"},"→",{"l":"variable","t":"string"}]},{"id":"71","t":"0","text":["Format current date/time",{"l":"format","t":"string"},"→",{"l":"variable","t":"string"}]},{"id":"72","t":"0","text":["Format from unix",{"t":"number"},{"l":"format","t":"string"},"→",{"l":"variable","t":"string"}]}]}]}]
Also events:
[{"class":"script","content":[{"id":"0","text":["When website loaded..."],"actions":[]},{"id":"1","text":["When",{"l":"button","t":"object"},"pressed..."],"actions":[]},{"id":"2","text":["When",{"value":"A(you can replace it)","t":"key"},"pressed..."],"actions":[]},{"id":"3","text":["When mouse enters",{"l":"button","t":"object"},"..."],"actions":[]},{"id":"5","text":["When mouse leaves",{"l":"button","t":"object"},"..."],"actions":[]},{"id":"4","text":["When message received..."],"actions":[]},{"id":"6","text":["Define function",{"l":"function","t":"string"}],"actions":[]}],"globalid":"`-"}]
(Credit to rickgottaken in Discord.)
And also with script you should write a Blocks (Not Json. Like just events with blocks.)

Also if people don't asking for Script Json, don't write Script Json.
Also CatWeb have some limits:
800 actions ran / 500 ms
200 objects (100 objects w/o Premium)
60 actions in 1 event.
15 events in 1 script.
1000 variables or 1000 table entries.
You can bypass action limit using functons.
Also you need this for Time Category:
"""
Elemental Tokens
Each of these tokens replace to a single value and can be used as elements of a larger time string. Avoid using these if you only need simple date and time information, as the composite tokens are more appropriate for those purposes.

Token(s)	Examples
Year
YY	70, 71, …, 29, 30
YYYY	1970, 1971, …, 2029, 2030
Month
M	1, 2, …, 11, 12
MM	01, 02, …, 11, 12
MMM	Jan, Feb, …, Nov, Dec
MMMM	January, February, …, November, December
Day of Month
D	1, 2, …, 30, 31
DD	01, 02, …, 30, 31
Day of Year
DDD	1, 2, …, 364, 365
DDDD	001, 002, …, 364, 365
Day of Week
d	0, 1, …, 5, 6
dd	Su, Mo, …, Fr, Sa
ddd	Sun, Mon, …, Fri, Sat
dddd	Sunday, Monday, …, Friday, Saturday
Hour
H	0, 1, …, 22, 23
HH	00, 01, …, 22, 23
h	1, 2, …, 11, 12
hh	01, 02, …, 11, 12
Minute
m	0, 1, …, 58, 59
mm	00, 01, …, 58, 59
Second
s	0, 1, …, 58, 59
ss	00, 01, …, 58, 59
Fractional Second
S	0, 1, …, 8, 9
SS	00, 01, …, 98, 99
SSS	000, 001, …, 998, 999
AM/PM
A	
en-us : AM, PM
zh-cn : 凌晨|早上|上午|中午|下午|晚上
a	
en-us : am, pm
zh-cn : 凌晨|早上|上午|中午|下午|晚上
"""
And rules:
1. Don't make Script/UI json if people don't asking for it!
2. Do not add non-existent blocks!
3. Do not use math in blocks (I mean if something have 5 + 5 or 5 / 5 and etc)
4. Add {} for variables in <s>, <string>, <any> but not in <variable>! Set variable {result} will just don't work because Script behavior!
5. CatWeb does not support https://, http://, tcp://, ftp:// and etc. Also CatWeb only supporting .rbx domains, like only example.rbx!
6. Always put credit for blocks when you typing script json.
7. Always make good UI. It's like Roblox Studio, but it's CatWeb. So put frame's, corners, outlines, and etc!
8. CatWeb have Background Transparency, Background Color, Text, Text Size, Text Color, Position, Size, Placeholder, Placeholder Color, Background Rotation, Image ID   
9. Write json correctly!
Now I need you to make, [enter what you want ScriptGPT to make]